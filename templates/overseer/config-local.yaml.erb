# FILE GENERATED BY PUPPET
# DO NOT EDIT. CHANGES WILL BE OVERWRITTEN.

# External TCP port to listen on for client connections.
# default = 3000
port: <%= @server_port %>

rest_server_url: <%= @server_url %>

################################################################################
# Database settings
################################################################################

# MongoDB database url
db:
    production: "mongodb://<%= @db_host %>/<%= @db_name %>"
    test: "mongodb://<%= @db_host %>/<%= @db_name %>_test"

################################################################################
# SSL/TLS configuration
################################################################################

# default = false
enable_ssl: <%= @enable_ssl %>

# SSL certificate and private key paths
# (required if tls_proxy == true)
server_certificate: '<%= @ssl_cert %>'
private_key: '<%= @ssl_key %>'

# SSL private key password
# (if the server private key file is password protected)
private_key_pass: '<%= @ssl_key_pass %>'

# TLS CA Cert to validate user certs against
# only used if use_tls_user_auth == true
ca_cert: '<%= @ssl_ca %>'

################################################################################
# Authentication options
################################################################################

# Choose the style of user authentication
# Options: 'password', 'certificate', 'pam'
authentication_type: '<%= @authentication_type %>'

# Maximum length of a client session (in seconds) before it is
# forcibly disconnected. A client can reconnect with a token any time in this period.
# default = 21600 [6 hours]
max_session_length: <%= @max_session_length %>

# Signing algorithm for login tokens.
# Must be one of the RSA or ECDSA options listed here:
# https://github.com/auth0/node-jsonwebtoken#algorithms-supported
jwt_signing_alg: '<%= @jwt_signing_alg %>'

# Only has an effect when cert_user_auth is also true, in which case we expect
# the reverse proxy to inject special headers containing the data from the user
# certificate.
# default = false
behind_reverse_proxy: <%= @behind_reverse_proxy %>

# PAM 'service' name to use. I.e., which file under /etc/pam.d/
# default = 'svmp'
<% if @authentication_type == 'pam' -%>
pam_service: <%= @pam_service %>
<% end -%>

################################################################################
# VM settings
################################################################################

# Port to connect to on Android VMs
# default = 8001
vm_port: <%= @vm_port %>

# Maximum life span of an idle VM (in seconds) before it is expired and gets destroyed.
# This is used after a session is disconnected.
# default = 3600 [1 hour]
vm_idle_ttl: <%= @vm_idle_ttl %>

# Interval (in seconds) of time to check for expired VMs.
# This is used after a session is disconnected.
# default = 300 [5 minutes]
vm_check_interval: 300

################################################################################
# svmp-server settings
################################################################################

# Address of the svmp-server that we tell the client to connect to
proxy_host: <%= @proxy_host %>

# Port the svmp-server listens on
proxy_port: <%= @proxy_port %>

################################################################################
# Logging options
################################################################################

# Log file path
log_file: '<%= @log_dir %>/<%= @log_file %>'

# Log level to use, omits lower log levels
# Levels, lowest to highest: silly, debug, verbose, info, warn, error
# default = 'info'
log_level: '<%= @log_level %>'

################################################################################
# Cloud API configuration
################################################################################

# Valid values: openstack, aws
cloud_platform: '<%= @cloud_platform %>'

# Openstack cloud connection details
openstack:
    # only required if 'cloud_platform' is set to 'openstack'
    authUrl: '<%= @openstack_auth_url %>'
    username: '<%= @openstack_user %>'
    password: '<%= @openstack_password %>'
    tenantId: '<%= @openstack_tenant_id %>'
    tenantName: '<% @openstack_tenant_name %>'
    region: '<%= @openstack_region %>'

# Amazon Web Services cloud connection details
aws:
    # only required if 'cloud_platform' is set to 'aws'
    accessKeyId: '<%= @aws_access_key %>'
    secretAccessKey: '<%= @aws_secret_key %>'
    region: '<%= @aws_region %>'
    availabilityZone: '<%= @aws_availability_zone %>'

# VM/Volume defaults
# images: a map of device types to their respective image ids on the cloud server.
# vmflavor: the value (as a string) of the VM flavor. For AWS, this is the instance type.
#   OpenStack flavors must be a number, example: m1.tiny = '1', m1.small = '2'
#   AWS instance types must be a string, example: 't1.micro', 'm1.small'
#   Run 'bin/cli.js images' for a listing.
# goldsnapshotId: the snapshot id to use for new volumes
# goldsnapshotSize: only used for OpenStack; the integer size in GBs, SAME AS THE goldsnapshot SIZE.
# use_floating_ip: only used for OpenStack; if this is enabled, we assign a floating IP address to the VM when
#   we start it. This is necessary if the proxy server isn't running within Openstack itself.
# floating_ip_pool: only used for OpenStack; if use_floating_ip is enabled, this can be optionally specified to
#   tell Openstack what ip pool to use when allocating new addresses
# pollintervalforstartup: this is the interval in milliseconds the apis to check for a running VM

new_vm_defaults:
    images:
        # Mapping of cloud image ID to a friendly name. These are the names used by the
        # configuration tool's add-user command.
        # each device type should have its own name and image ID in key/value format, e.g.:
        # "device_type": "imageID",
        <%- @cloud_vm_images.each_pair do |key, val| -%>
        <%= key %>: '<%= val %>'
        <%- end -%>
    vmflavor: '<%= @cloud_vm_flavor %>'
    goldsnapshotId: '<%= @cloud_master_data_volume_id %>'
    goldsnapshotSize: <%= @cloud_master_data_volume_size %>
    use_floating_ips: <%= @cloud_use_floating_ips %>
    floating_ip_pool: '<%= @cloud_floating_ip_pool %>'
    pollintervalforstartup: 2000

################################################################################
# WebRTC settings for video and audio streaming to the client
################################################################################

webrtc:
    # Enter zero or more servers to use for in ICE negotiation for NAT traversal
    ice_servers:
        <%- @ice_servers.each do |val| -%>
        - url: '<%= val['url'] %>'
          <%- if val['username'] -%>
          username: '<%= val['username'] %>'
          <%- end -%>
          <%- if val['password'] -%>
          password: '<%= val['password'] %>'
          <%- end -%>
    <%- end -%>

    # WebRTC constraints and paramenters that are sent to the peers.
    # Don't change unless you know what you're doing.
    #video: { audio: true, video: { mandatory: {}, optional: [] } }
    #pc: { optional: [ {DtlsSrtpKeyAgreement: true} ] }
